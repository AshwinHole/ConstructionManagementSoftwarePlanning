
Description of Software :
Construction Management is very unorganized . So I am building a software which manages all tasks on an ongoing project. Actors involved or People who can access this software are Owner/Builder , RCC Consultant, Architect , project manager and  site engineer.
The Construction management software has following modules followed by functions provided by the respective model :
1)Create Projects - Assign Designations, Add Remove concerned persons (Only builder has its access) 
2)Repository  - View Blueprints , Add Blueprints (All actors involved have the access)
3)PLanOfActions - Update Plan of action monthly , weekly, daily , View Plan of action - (Only project manager has access to Update this rest every one else have only viewing permission)
4)Transactions - View and update total Profit, Add Income , Update expenses(Expenses related to steel,cement,Sand, Miscellaneous) -( Only builder has access to view as well as update here)
5)Material Management - Check Available material , Update used material . (Site engineer has update option while rest have view option)
6)Task Tickets(Tickets are nothing but tasks. These tickets can be created and assigned to anyone on the project, Tickets can be updated Closed ,Comments can be added (Tickets similiar to atlassian software)) - Create/View/Update Task Tickets.(Everybidy have its access)
7)Daily Reports - Workdone to be updated by every worker, Special comments to be noted, TTo decide plan of action for next day based on today's report. (Efverybody has it's access)
8)Attendance Attendance to be taken by site engineer of every worker. Site engineer needs to add person In-Time and Out TIme. (Builder and project manager have view permissions while site engineer has edit permission)
Create Projects,Repository,PLanOfActions,Transactions,Material Management,Daily Reports,Attendance

Prepare a Software Requirements Specification document based on above description of software having following Table Of COntents. All the terminologies here are based on Software Engineering
Table of Contents

1. Introduction
1.1 Purpose
1.2 Intended Audience and Reading Suggestions
1.3 Product Scope
1.4 References
2. Overall Description
2.1 Product Perspective
2.2 Product Functions
2.3 User Classes and Characteristics
2.4 Operating Environment
2.5 Design and Implementation Constraints
2.6 User Documentation
2.7 Assumptions and Dependencies
3. External Interface Requirements
3.1 User Interfaces
3.2 Hardware Interfaces
3.3 Software Interfaces
3.4 Communications Interfaces 
4. System Features 
4.1 System Feature 
4.2 System Feature 2 (and so on)
5. Other Nonfunctional Requirements
5.1 Performance Requirement
5.2 Safety Requirements
5.3 Security Requirements
5.4 Software Quality Attributes
5.5 Business Rules